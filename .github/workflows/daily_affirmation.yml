name: Daily Affirmation Post

on:
  schedule:
    # Times are in UTC (CST + 6 hours)
    - cron: '0 12 * * *'  # 6:00 AM CST
    - cron: '0 14 * * *'  # 8:00 AM CST
    - cron: '0 16 * * *'  # 10:00 AM CST
    - cron: '0 18 * * *'  # 12:00 PM CST
    - cron: '0 20 * * *'  # 2:00 PM CST
    - cron: '0 22 * * *'  # 4:00 PM CST
    - cron: '0 0 * * *'   # 6:00 PM CST
    - cron: '0 2 * * *'   # 8:00 PM CST
    - cron: '0 4 * * *'   # 10:00 PM CST
    - cron: '0 6 * * *'   # 12:00 AM CST
  # Allow manual trigger
  workflow_dispatch:

jobs:
  generate-and-post:
    runs-on: ubuntu-latest
    timeout-minutes: 30  # Set timeout to 30 minutes
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y ffmpeg
        
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install moviepy pillow openai boto3 python-dotenv requests
        
    - name: Create output directory
      run: mkdir -p output
      
    - name: Create assets directory
      run: mkdir -p assets
      
    - name: Check for assets
      run: |
        if [ ! -f "assets/Iphone_Affirmation_Background.jpg" ]; then
          echo "Background image not found in repository"
          exit 1
        fi
        if [ ! -f "assets/background_music_ambient.mp3" ]; then
          echo "Background music not found in repository"
          exit 1
        fi
        echo "Assets found successfully"
        
    - name: Run affirmation script with retries
      env:
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        FACEBOOK_ACCESS_TOKEN: ${{ secrets.FACEBOOK_ACCESS_TOKEN }}
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        S3_BUCKET_NAME: ${{ secrets.S3_BUCKET_NAME }}
        AWS_REGION: ${{ secrets.AWS_REGION }}
      run: |
        max_attempts=3
        attempt=1
        while [ $attempt -le $max_attempts ]; do
          echo "Attempt $attempt of $max_attempts"
          python generate_affirmation_video.py && break
          attempt=$((attempt + 1))
          if [ $attempt -le $max_attempts ]; then
            echo "Script failed, retrying in 30 seconds..."
            sleep 30
          else
            echo "Script failed after $max_attempts attempts"
            exit 1
          fi
        done
        
    - name: Verify video was generated
      run: |
        if [ ! -f "output/"*.mp4 ]; then
          echo "No video file was generated"
          exit 1
        fi
        echo "Video generated successfully"
      
    - name: Upload generated video
      uses: actions/upload-artifact@v3.1.2
      with:
        name: affirmation-video
        path: output/*.mp4
        retention-days: 7  # Keep artifacts for 7 days 